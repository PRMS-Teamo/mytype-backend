services:
  pg_teamo:
    image: postgres:latest
    ports:
      - 54332:5432
    environment:
      POSTGRES_USER: ${DB_USER:-teamo}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-teamo}
      POSTGRES_DB: ${DB_NAME:-teamo}
    volumes:
      - ./databases/postgres/init-database.sql:/docker-entrypoint-initdb.d/init-database.sql
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U ${DB_USER:-teamo} -d ${DB_NAME:-teamo}"]
      interval: 5s
      timeout: 5s
      retries: 5
  mongo_teamo:
    image: mongo:8.0.9
    ports:
      - 27027:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER:-teamo}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD:-teamo}
    volumes:
      - ./databases/mongo/init.js:/docker-entrypoint-initdb.d/init.js
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--username",
          "${DB_USER:-teamo}",
          "--password",
          "${DB_PASSWORD:-teamo}",
          "--authenticationDatabase",
          "admin",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
  redis_teamo:
    image: redis:latest
    ports:
      - 6389:6379
    volumes:
      - ./databases/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  backend_teamo:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 30040:3000
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./tsconfig.build.json:/app/tsconfig.build.json
      - ./tsconfig.app.json:/app/tsconfig.app.json
      - ./nest-cli.json:/app/nest-cli.json
      - .env:/app/.env
    depends_on:
      pg_teamo:
        condition: service_healthy
      mongo_teamo:
        condition: service_healthy
      redis_teamo:
        condition: service_healthy
    restart: unless-stopped
